version: "3.8"

services:
  postgres:
    image: postgres:16.0
    container_name: audio_service_db
    environment:
      POSTGRES_DB: music_hub
      POSTGRES_USER: roman
      POSTGRES_PASSWORD: 1111
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    ports:
      - "3030:5432"

#  keycloak-postgres:
#    image: postgres:16.0
#    container_name: keycloak_postgres_db
#    environment:
#      POSTGRES_DB: keycloak
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: admin
#    ports:
#      - "5432:5432"
#
#  keycloak:
#    image: bitnami/keycloak:23.0.7
#    container_name: keycloak_container
#    environment:
#      DB_VENDOR: POSTGRES
#      DB_ADDR: keycloak-postgres
#      DB_SCHEMA: public
#      DB_DATABASE: keycloak
#      DB_USER: admin
#      DB_PASSWORD: admin
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    ports:
#      - "8181:8080"
#    depends_on:
#      - keycloak-postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper_container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka_container
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - microservices-network
    ports:
      - "9092:9092"

  eureka-server:
    container_name: "eureka-server"
    build: ../search_lyrics/eureka-server
    networks:
      - microservices-network
    ports:
      - "8761:8761"

  api-gateway:
    container_name: "api-gateway"
    build: ../search_lyrics/api-gateway
    restart: on-failure
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
    networks:
      - microservices-network
    depends_on:
      - eureka-server
    ports:
      - "8088:8088"

  audio-service:
    container_name: "microservice-audio"
    build: ../search_lyrics/audio-service
    restart: on-failure
    depends_on:
      - postgres
      - eureka-server
      - kafka
      - api-gateway
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/music_hub
      - SPRING_DATASOURCE_USERNAME=roman
      - SPRING_DATASOURCE_PASSWORD=1111
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
    networks:
      - microservices-network
    ports:
      - "8083:8083"

  search-audio-service:
    container_name: "microservice-search-audio"
    build: ../search_lyrics/search-audio-service
    restart: on-failure
    depends_on:
      - postgres
      - eureka-server
      - audio-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/music_hub
      - SPRING_DATASOURCE_USERNAME=roman
      - SPRING_DATASOURCE_PASSWORD=1111
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
    networks:
      - microservices-network
    ports:
      - "8082:8082"

  notification-service:
    container_name: "microservice-notification"
    build: ../search_lyrics/notification-service
    restart: on-failure
    depends_on:
      - postgres
      - eureka-server
      - kafka
      - audio-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/music_hub
      - SPRING_DATASOURCE_USERNAME=roman
      - SPRING_DATASOURCE_PASSWORD=1111
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
    networks:
      - microservices-network
    ports:
      - "8081:8081"

networks:
  microservices-network:
    driver: bridge
